name: CI/CD with Helm CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: yonihavasov/flask-app
  IMAGE_TAG: 0.0.${{ github.run_number }}

jobs:
  build-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          docker build -t ${IMAGE_NAME}:${IMAGE_TAG} -t ${IMAGE_NAME}:latest flask-app
          docker push ${IMAGE_NAME}:${IMAGE_TAG}
          docker push ${IMAGE_NAME}:latest

      - name: Set up Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose version
    
      - name: Create .env file
        run: |
         echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> flask-app/.env
         echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> flask-app/.env
         echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> flask-app/.env
         echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> flask-app/.env
         echo "PORT=${{ secrets.PORT }}" >> flask-app/.env
         echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> flask-app/.env
         echo "DB_NAME=${{ secrets.DB_NAME }}" >> flask-app/.env
         echo "DB_HOST=${{ secrets.DB_HOST }}" >> flask-app/.env
         echo "DB_USER=${{ secrets.DB_USER }}" >> flask-app/.env      
    
      - name: Start the application with Docker Compose
        working-directory: flask-app
        run: | 
            docker-compose --env-file .env -f docker-compose.yml up -d
            sleep 5 # Allow time for the application to start
    
  deploy:
    runs-on: ubuntu-latest
    needs: build-Test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Google Cloud Service Account Key
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > /tmp/key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/key.json" >> $GITHUB_ENV

      - name: Install gcloud CLI # for cli commands
        uses: google-github-actions/setup-gcloud@v1
  
      - name: login to gcloud # using service account as a credential to login to gcloud cli.
        run: |
          gcloud auth activate-service-account --key-file=/tmp/key.json

      - name: Authenticate with GKE
        run: |
          gcloud auth activate-service-account --key-file=/tmp/key.json
          gcloud container clusters get-credentials \
            ${{ secrets.GCP_CLUSTER_NAME }} \
            --project ${{ secrets.GCP_PROJECT_ID }} \

      - name: Install Helm
        run: |
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy Flask App Using Helm
        run: |
          helm upgrade --install flask-release charts/helm \
            --namespace default \
            --set flaskApp.tag=${IMAGE_TAG}

      - name: Debug Kubernetes Pods
        run: |
          kubectl get pods -A
          kubectl describe pods -n default